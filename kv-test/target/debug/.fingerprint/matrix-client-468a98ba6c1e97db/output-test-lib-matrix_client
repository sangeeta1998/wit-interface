{"$message_type":"diagnostic","message":"failed to resolve: could not find `acc` in `wasi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":76,"byte_end":79,"line_start":6,"line_end":6,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"use bindings::wasi::acc::host_allocator::{","highlight_start":21,"highlight_end":24}],"label":"could not find `acc` in `wasi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `acc` in `wasi`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse bindings::wasi::acc::host_allocator::{\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `acc` in `wasi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `run_matrix_example` is not a member of trait `Guest`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":531,"byte_end":4133,"line_start":23,"line_end":96,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn run_matrix_example() -> Result<(), String> {","highlight_start":5,"highlight_end":52},{"text":"        println!(\"[Client Wasm] Starting matrix example...\");","highlight_start":1,"highlight_end":62},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Define matrices A and B (e.g., 2x2)","highlight_start":1,"highlight_end":47},{"text":"        // A = [[1.0, 2.0], [3.0, 4.0]]","highlight_start":1,"highlight_end":40},{"text":"        // B = [[5.0, 6.0], [7.0, 8.0]]","highlight_start":1,"highlight_end":40},{"text":"        // C = A x B = [[19.0, 22.0], [43.0, 50.0]]","highlight_start":1,"highlight_end":52},{"text":"        let a_data: Vec<f32> = vec![1.0, 2.0, 3.0, 4.0];","highlight_start":1,"highlight_end":57},{"text":"        let b_data: Vec<f32> = vec![5.0, 6.0, 7.0, 8.0];","highlight_start":1,"highlight_end":57},{"text":"        let dims_a = MatrixDimensions { rows: 2, cols: 2 };","highlight_start":1,"highlight_end":60},{"text":"        let dims_b = MatrixDimensions { rows: 2, cols: 2 };","highlight_start":1,"highlight_end":60},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let a_bytes = f32_vec_to_bytes(&a_data);","highlight_start":1,"highlight_end":49},{"text":"        let b_bytes = f32_vec_to_bytes(&b_data);","highlight_start":1,"highlight_end":49},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // 1. Allocate host buffers","highlight_start":1,"highlight_end":36},{"text":"        let handle_a = allocate_buffer(a_bytes.len() as u64)","highlight_start":1,"highlight_end":61},{"text":"            .map_err(|e| format!(\"Failed to allocate for A: {:?}\", e))?;","highlight_start":1,"highlight_end":73},{"text":"        println!(\"[Client Wasm] Allocated A, handle: {}\", handle_a);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let handle_b = allocate_buffer(b_bytes.len() as u64)","highlight_start":1,"highlight_end":61},{"text":"            .map_err(|e| format!(\"Failed to allocate for B: {:?}\", e))?;","highlight_start":1,"highlight_end":73},{"text":"        println!(\"[Client Wasm] Allocated B, handle: {}\", handle_b);","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // 2. Write data to host buffers","highlight_start":1,"highlight_end":41},{"text":"        write_to_host(&a_bytes, handle_a, 0)","highlight_start":1,"highlight_end":45},{"text":"            .map_err(|e| format!(\"Failed to write A: {:?}\", e))?;","highlight_start":1,"highlight_end":66},{"text":"        println!(\"[Client Wasm] Wrote A data to host\");","highlight_start":1,"highlight_end":56},{"text":"        register_matrix_dimensions(handle_a, dims_a)","highlight_start":1,"highlight_end":53},{"text":"             .map_err(|e| format!(\"Failed to register dims A: {:?}\", e))?;","highlight_start":1,"highlight_end":75},{"text":"        println!(\"[Client Wasm] Registered A dimensions\");","highlight_start":1,"highlight_end":59},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        write_to_host(&b_bytes, handle_b, 0)","highlight_start":1,"highlight_end":45},{"text":"            .map_err(|e| format!(\"Failed to write B: {:?}\", e))?;","highlight_start":1,"highlight_end":66},{"text":"        println!(\"[Client Wasm] Wrote B data to host\");","highlight_start":1,"highlight_end":56},{"text":"        register_matrix_dimensions(handle_b, dims_b)","highlight_start":1,"highlight_end":53},{"text":"             .map_err(|e| format!(\"Failed to register dims B: {:?}\", e))?;","highlight_start":1,"highlight_end":75},{"text":"        println!(\"[Client Wasm] Registered B dimensions\");","highlight_start":1,"highlight_end":59},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // 3. Perform matrix multiplication","highlight_start":1,"highlight_end":44},{"text":"        let handle_c = matrix_multiply_f32(handle_a, handle_b)","highlight_start":1,"highlight_end":63},{"text":"            .map_err(|e| format!(\"Matrix multiplication failed: {:?}\", e))?;","highlight_start":1,"highlight_end":77},{"text":"        println!(\"[Client Wasm] Matrix multiplication done. Result C handle: {}\", handle_c);","highlight_start":1,"highlight_end":93},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // 4. Get dimensions of C and read C back","highlight_start":1,"highlight_end":50},{"text":"        let dims_c = get_matrix_dimensions(handle_c)","highlight_start":1,"highlight_end":53},{"text":"            .map_err(|e| format!(\"Failed to get C dimensions: {:?}\", e))?;","highlight_start":1,"highlight_end":75},{"text":"        println!(\"[Client Wasm] Got C dimensions: {}x{}\", dims_c.rows, dims_c.cols);","highlight_start":1,"highlight_end":85},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let c_byte_len = (dims_c.rows * dims_c.cols * std::mem::size_of::<f32>() as u32) as u64;","highlight_start":1,"highlight_end":97},{"text":"        let c_bytes = read_from_host(handle_c, 0, c_byte_len)","highlight_start":1,"highlight_end":62},{"text":"            .map_err(|e| format!(\"Failed to read C: {:?}\", e))?;","highlight_start":1,"highlight_end":65},{"text":"        println!(\"[Client Wasm] Read C data from host ({} bytes)\", c_bytes.len());","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let c_data = bytes_to_f32_vec(&c_bytes).ok_or(\"Failed to parse C data\".to_string())?;","highlight_start":1,"highlight_end":94},{"text":"        println!(\"[Client Wasm] Result C: {:?}\", c_data);","highlight_start":1,"highlight_end":58},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Expected: [19.0, 22.0, 43.0, 50.0]","highlight_start":1,"highlight_end":46},{"text":"        let expected_c: Vec<f32> = vec![19.0, 22.0, 43.0, 50.0];","highlight_start":1,"highlight_end":65},{"text":"        if c_data.iter().zip(expected_c.iter()).all(|(a,b)| (a-b).abs() < f32::EPSILON) {","highlight_start":1,"highlight_end":90},{"text":"            println!(\"[Client Wasm] Matrix multiplication SUCCESSFUL!\");","highlight_start":1,"highlight_end":73},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            return Err(format!(\"[Client Wasm] Matrix multiplication FAILED. Expected {:?}, Got {:?}\", expected_c, c_data));","highlight_start":1,"highlight_end":124},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // 5. Free host buffers","highlight_start":1,"highlight_end":32},{"text":"        free_buffer(handle_a).map_err(|e| format!(\"Failed to free A: {:?}\", e))?;","highlight_start":1,"highlight_end":82},{"text":"        free_buffer(handle_b).map_err(|e| format!(\"Failed to free B: {:?}\", e))?;","highlight_start":1,"highlight_end":82},{"text":"        free_buffer(handle_c).map_err(|e| format!(\"Failed to free C: {:?}\", e))?;","highlight_start":1,"highlight_end":82},{"text":"        println!(\"[Client Wasm] Freed all handles.\");","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        Ok(())","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"not a member of trait `Guest`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":534,"byte_end":552,"line_start":23,"line_end":23,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"    fn run_matrix_example() -> Result<(), String> {","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":"run_kv_example","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `run_matrix_example` is not a member of trait `Guest`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    fn run_matrix_example() -> Result<(), String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `run_kv_example`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _____|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        println!(\"[Client Wasm] Starting matrix example...\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `Guest`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `run_kv_example`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":500,"byte_end":524,"line_start":22,"line_end":22,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"impl Guest for Component {","highlight_start":1,"highlight_end":25}],"label":"missing `run_kv_example` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bindings.rs","byte_start":1417,"byte_end":1464,"line_start":41,"line_end":41,"column_start":5,"column_end":52,"is_primary":false,"text":[{"text":"    fn run_kv_example() -> Result<(), _rt::String>;","highlight_start":5,"highlight_end":52}],"label":"`run_kv_example` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn run_kv_example() -> Result<(), String> { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4134,"byte_end":4134,"line_start":97,"line_end":97,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn run_kv_example() -> Result<(), String> { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `run_kv_example`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Guest for Component {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `run_kv_example` in implementation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/bindings.rs:41:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn run_kv_example() -> Result<(), _rt::String>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`run_kv_example` from trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0046, E0407, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0046, E0407, E0433.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0046`.\u001b[0m\n"}
